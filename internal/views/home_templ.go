// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func HomeView() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section :class=\"darkMode ? &#39;bg-black text-white&#39; : &#39;bg-white text-black&#39;\" class=\"rounded-lg flex flex-col main-section mx-4 my-10 md:mx-38 md:p-14 xl:mx-72 xl:p-16\"><div class=\"intro\"><h2 class=\"text-2xl font-bold\">Nihal Abdulla</h2><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg\">Fullstack Developer</p><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg pt-4\">Hi, Iâ€™m a highly motivated Full-stack Developer with 3+ years of experience de secure and user-centric applications. Proficient in <b>Flutter</b>, <b>React</b>, and backend technologies like <b>Spring Boot</b>, <b>Golang</b>, <b>ASP.Net Core</b> and <b>Node.js</b>. Adept at integrating secure coding practices and enhancing development pipelines through automation and CI/CD processes. I am also passionate about cybersecurity.</p></div><div class=\"mt-14 experience\"><h2 class=\"text-2xl font-bold\">Experience_</h2><div class=\"exp-1\"><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg font-bold mt-10\">Software Engineer</p><h3 class=\"text-lg font-bold\">Innsof Private Ltd</h3><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-base\">Aug 2023 - May 2025</p><ul :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"mt-8 pl-6\"><li>Collaborated with cross-functional teams, aligning project goals to deliver features.</li><li>Automated deployment pipelines using CI/CD tools, reducing deployment failures by 50% and accelerating release cycles.</li><li>Standardized coding practices, established Git workflows, and integrated CI/CD pipelines and halved deployment failures, ensuring a robust and efficient development process.</li><li>Developed secure, scalable APIs using Golang, contributing to enterprise-grade software solutions.</li></ul></div><div class=\"exp-2\"><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg font-bold mt-10\">Solutions Engineer</p><h3 class=\"text-lg font-bold\">ColorBracket Technologies</h3><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-base\">May 2022 - Oct 2022</p><ul :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"mt-8 pl-7\"><li>Streamlined code deployment pipelines, reducing deployment time by 40%.</li><li>Provided technical consultations to improve system scalability and performance.</li></ul></div><div class=\"exp-3\"><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg font-bold mt-10\">Fullstack Developer</p><h3 class=\"text-lg font-bold\">Freelancer</h3><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-base\">Jan 2021 - May 2022</p><ul :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"mt-8 pl-7\"><li>Designed and developed responsive mobile and web applications using Flutter and React.</li><li>Built backend systems using Node.js to handle secure, high-performance transactions.</li><li>Integrated third-party APIs, enhancing application functionalities and user experiences.</li></ul></div></div><div class=\"mt-14 education\"><h2 class=\"text-2xl font-bold\">Education_</h2><div><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg font-bold mt-10\">B.Tech (Computer Science)</p><div class=\"flex justify-between\"><h3 class=\"text-lg font-bold\">MEA Engineering College</h3><span>CGPA: <b>6.89</b></span></div><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-base\">2017 - 2021</p></div></div><div class=\"mt-14 certifications\"><h2 class=\"text-2xl font-bold\">Certifications_</h2><div><div class=\"flex mt-10 space-x-2\"><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-lg font-bold\">Coursera</p><span class=\"material-symbols-outlined text-blue-700\">verified</span></div><div class=\"flex justify-between\"><h3 class=\"text-lg font-bold\">Introduction to cybersecurity Tools & Cyberattacks</h3><a class=\"underline text-blue-500\" href=\"https://www.coursera.org/account/accomplishments/verify/VVE9386KH2W2\">Verify</a></div><p :class=\"darkMode ? &#39;text-[#c1c1c1]&#39; : &#39;text-[#3d3d3d]&#39;\" class=\"text-base\">2021</p></div></div><div class=\"flex\"><div><h3 class=\"text-lg\">Tools</h3><span>Tools i use</span></div></div></section><script src=\"/static/js/home.js\"></script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
